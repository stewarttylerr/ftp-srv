version: 2.1

orbs:
  node: circleci/node@4.1.0
  win: circleci/windows@2.2.0

commands:
  setup_git_bot:
    description: set up the bot git user to make changes
    steps:
      - run:
          name: "Git: Botovance"
          command: |
            git config --global user.name "Bot Vance"
            git config --global user.email bot@autovance.com

executors:
  linux:
    docker:
      - image: cimg/base:2020.01
  win: win/default
  node:
    docker:
      - image: cimg/node:lts

jobs:

  win-test:
    parameters:
      version:
        type: string
    executor: win
    steps:
      - checkout
      - run: nvm install << parameters.version >>
      - run: nvm use << parameters.version >>
      - restore_cache:
          keys:
              - node-deps-{{ .Branch }}-{{ checksum "package-lock.json" }}
      - run: npm ci
      - save_cache:
          key: node-deps-{{ .Branch }}-{{ checksum "package-lock.json" }}
          paths:
              - ~/.npm
      - run: npm test

  lint:
    executor: node
    steps:
      - checkout
      - node/install-packages
      - run:
          name: Lint
          command: npm run verify

  release_dry_run:
    executor: node
    steps:
      - checkout
      - node/install-packages
      - setup_git_bot
      - deploy:
          name: Dry Release
          command: |
            git branch -u "origin/${CIRCLE_BRANCH}"
            npx semantic-release --dry-run

  release:
    executor: node
    steps:
      - checkout
      - node/install-packages
      - setup_git_bot
      - deploy:
          name: Release
          command: |
            git branch -u "origin/${CIRCLE_BRANCH}"
            npx semantic-release

workflows:
  version: 2
  test:
    jobs:
      - lint
      - win-test:
          matrix:
            parameters:
              version: ['10.23', '12.20', '14.15', '15.4']
      - node/test:
          matrix:
            parameters:
              version: ['10.23', '12.20', '14.15', 'current']
      - release_dry_run:
          filters:
            branches:
              only: master
          requires:
            - node/test
            - win-test
            - lint
      - hold_release:
          type: approval
          requires:
            - release_dry_run
      - release:
          context: deploy-npm
          requires:
            - hold_release
